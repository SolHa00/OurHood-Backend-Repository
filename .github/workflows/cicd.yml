name: OurHood CI/CD

on:
  push:
    branches: [ "main" ]

env:
  S3_BUCKET_NAME: ourhood-s3-bucket
  PROJECT_NAME: ourhood

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set yml file
      uses: microsoft/variable-substitution@v1
      with:
        files: ./src/main/resources/application.yml
      env:
        spring.datasource.url: ${{ secrets.DB_HOST }}
        spring.datasource.username: ${{ secrets.DB_USERNAME }}
        spring.datasource.password: ${{ secrets.DB_PASSWORD }}
        cloud.aws.credentials.access-key: ${{ secrets.ACCESS_KEY }}
        cloud.aws.credentials.secret-key: ${{ secrets.SECRET_KEY }}
        cloud.aws.s3.bucket: ${{ secrets.S3_BUCKET }}
        jwt.secret: ${{ secrets.JWT_SECRET_KEY }}

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: make gradlew executable
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew clean build -x test
    - name: Check build output
      run: ls -al ./build
    - name: Check libs folder
      run: ls -al ./build/libs


    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.SECRET_KEY }}
        aws-region: ap-northeast-2

    - name: Make dir
      run: mkdir cicd

    - name: Copy jar
      run: cp ./build/libs/*.jar ./cicd

    - name: Copy appspec
      run: cp ./appspec.yml ./cicd

    - name: Copy script
      run: cp ./deploy.sh ./cicd

    - name: Make zip
      run: zip -r -qq -j ./deploy.zip ./cicd
    - run: ls -al

    - name : Upload S3
      run: aws s3 cp --region ${{ secrets.AWS_REGION }} ./deploy.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/

    - name: Code Deploy
      run: aws deploy create-deployment --application-name ourhood-codedeploy-application --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name my-codedeployment-group --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/deploy.zip